#!/usr/bin/env python
"""
file: 8.py
date: Wed Jul 30 19:55:08 EDT 2014
from: Project Euler: http://projecteuler.net
auth: tls
purp: The first five consecutive digits are: 73167. Their product is 7*3*1*6*7=882
      The next five consecutive digits are: 31671. Their product is 3*1*6*7*1=126
      The next five consecutive digits are: 16717. Their product is 1*6*7*1*7=294
      And so on. Note the overlap. Now, find the five consecutive digits whose
      product is maximal over the whole 1000-digit number. 
      See 1000digits.txt for the number.
      Ans: 23514624000 on Wed Jul 30 23:30:14 EDT 2014
"""
txt= "73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450\
"
#txt= "123451234512345"

def prod_of_digits(part):
    prod= 1
    for i in range(0,len(part)):
        prod = prod * int(part[i])
    return prod

def max_of_digits(txt,span):
    """
    if not len(txt) % span == 0:
        print("Problem. len(txt)= %d %% (span) %d must equal 0." % (len(txt),span))
        return 0
    """
    i= 0
    biggest= 0
    while i < len(txt) - span+ 1:
        #print txt[i:i+ span]
        part= txt[i:i+ span]
        num= prod_of_digits(part)
        biggest= num if num > biggest else biggest
        print part,biggest, num
        i += 1
    return biggest

def main():
    """
    """
    global txt
    span= 5
    span= 13
    ans= max_of_digits(txt,span)
    print ans
    return 0

if __name__ == "__main__":
    main()
